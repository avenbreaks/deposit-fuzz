name: Build and Release Binary

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:  # Allow manual triggering

jobs:
  build:
    name: Build and Upload Binary
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        target: [x86_64-unknown-linux-gnu, x86_64-apple-darwin, x86_64-pc-windows-msvc]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - name: Add Rust Target
        run: rustup target add ${{ matrix.target }}

      - name: Build Binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Package Binary
        run: |
          mkdir -p dist
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            cp target/${{ matrix.target }}/release/deposit-fuzz.exe dist/deposit-fuzz-${{ matrix.os }}.exe
          else
            cp target/${{ matrix.target }}/release/deposit-fuzz dist/deposit-fuzz-${{ matrix.os }}
          fi

      - name: Upload Binary as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: deposit-fuzz-${{ matrix.os }}
          path: dist/

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: deposit-fuzz-${{ matrix.os }}
          path: dist/

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: dist/*
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            This release contains the precompiled binaries for `deposit-fuzz`.

            ## Platforms
            - Linux
            - m
